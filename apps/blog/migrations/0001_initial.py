# Generated by Django 5.1.3 on 2024-11-10 18:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='The datetime this object was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The datetime this object was last updated')),
                ('title', models.CharField(help_text='Title of the content', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of the title', max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='The datetime this object was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The datetime this object was last updated')),
                ('title', models.CharField(help_text='Title of the content', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of the title', max_length=100, unique=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='The datetime this object was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The datetime this object was last updated')),
                ('meta_title', models.CharField(blank=True, help_text='Maximum 60 characters. Should be unique and descriptive.', max_length=60)),
                ('meta_description', models.CharField(blank=True, help_text='Maximum 160 characters. Provide a concise summary.', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma-separated keywords. Maximum 10 keywords.', max_length=255)),
                ('title', models.CharField(help_text='Title of the content', max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of the title', max_length=100, unique=True)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True, help_text='A short summary of the post')),
                ('featured_image', models.ImageField(blank=True, help_text='Image should be optimized before upload', null=True, upload_to='blog', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='blog.category')),
                ('tags', models.ManyToManyField(related_name='posts', to='blog.tag')),
            ],
            options={
                'ordering': ['-published_date', '-created_at'],
            },
        ),
    ]
